[{"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\index.tsx":"1","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\App.tsx":"3","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Profile\\Profile.tsx":"4","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Footer\\Footer.tsx":"5","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\pages\\Resume\\Resume.tsx":"6","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\pages\\Portfolio\\Portfolio.tsx":"7","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Timeline\\Timeline.tsx":"8","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\utils\\resumeData.js":"9","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Button\\Button.tsx":"10","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Header\\Header.tsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1106,"mtime":1609621155342,"results":"15","hashOfConfig":"13"},{"size":3765,"mtime":1609812325190,"results":"16","hashOfConfig":"13"},{"size":753,"mtime":1609570044169,"results":"17","hashOfConfig":"13"},{"size":11418,"mtime":1609810954083,"results":"18","hashOfConfig":"13"},{"size":9617,"mtime":1609812496841,"results":"19","hashOfConfig":"13"},{"size":1748,"mtime":1609807729184,"results":"20","hashOfConfig":"13"},{"size":1243,"mtime":1609807604770,"results":"21","hashOfConfig":"13"},{"size":810,"mtime":1609809039454,"results":"22","hashOfConfig":"13"},{"size":2514,"mtime":1609812422815,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xlzo7p",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\index.tsx",[],["52","53"],"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\App.tsx",[],"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Profile\\Profile.tsx",["54"],"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Footer\\Footer.tsx",["55"],"import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Footer.css\";\r\nimport resumeData from \"../../utils/resumeData\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <Typography className=\"footer_name\">{resumeData.name}</Typography>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Typography className=\"footer_copyright\">\r\n          Designed and Developed by Samir Rehmtulla\r\n          <br />\r\n          Clone idea from{\" \"}\r\n          <a href=\"https://themeforest.net/user/tavonline\" target=\"_blank\">\r\n            Travonline\r\n          </a>\r\n          .\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\pages\\Resume\\Resume.tsx",["56"],"import { Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CustomTimeline from \"../../components/Timeline/Timeline\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport \"./Resume.css\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\n\r\ntype experience = {\r\n  title: string;\r\n  date: string;\r\n  description: string;\r\n};\r\n\r\ntype service = {\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n};\r\n\r\ntype skill = {\r\n  title: string;\r\n  description: string[];\r\n};\r\n\r\nconst Resume = () => {\r\n  const passIn = {\r\n    title: \"Work Experience\",\r\n    icon: WorkIcon,\r\n  };\r\n\r\n  const passIn2 = {\r\n    title:\r\n      \"Education - UWaterloo, Bachelor of Software Engineering - GPA: 94.39\",\r\n    icon: SchoolIcon,\r\n  };\r\n\r\n  const workExperience: experience[] = [\r\n    {\r\n      title: \"Snowflake Computing\",\r\n      date: \"Sept - Dec 2020 | Software Engineering Intern\",\r\n      description:\r\n        \"Drafted, designed, implemented, tested and monitored a throttling layer that balances user workload isolation with cost-efficient multitenant resource scheduling.\",\r\n    },\r\n    {\r\n      title: \"Safe Software\",\r\n      date: \"Jan - Apr 2020 | C++ Development Intern\",\r\n      description:\r\n        \"Implemented performant readers and writers to add read and write support to the Feature Manipulation Engine (FME) for Microsoft DirectDraw Surface (DDS) and Mapbox Vector Tile (MVT) file formats.\",\r\n    },\r\n    {\r\n      title: \"Wish\",\r\n      date: \"May - Aug 2019 | Software Engineering Analytics Intern\",\r\n      description:\r\n        \"Designed and implemented a 3-step (TF-IDF, Gradient Boosting, Logistic Regression) machine learning pipeline to classify misleading products on the platform. Also migrated the company's main analytics dashboard from Looker to Tableau.\",\r\n    },\r\n    {\r\n      title: \"Kik\",\r\n      date: \"Sept - Dec 2018 | Data Science Intern\",\r\n      description:\r\n        \"Built a Spark gradient-boosted tree model to flag spam users in real-time, seconds after account creation. Designed a hyperparameter tuning framework for existing models and set up SQL-driven dashboards.\",\r\n    },\r\n    {\r\n      title: \"RocScience\",\r\n      date: \"Jan - Apr 2018 | C# Development Intern\",\r\n      description:\r\n        \"Implemented automatic surface parameterization of arbitrary 3D tunnel mesh geometries to allow clients to apply boundary conditions at discrete intervals on tunnel models.\",\r\n    },\r\n    {\r\n      title: \"Loblaw Digital\",\r\n      date: \"May - Aug 2017 | Software Engineering (Backend) Intern\",\r\n      description:\r\n        'Implemented backend endpoints for new \"Store Locator\" page with automated tests, mocking necessary web services',\r\n    },\r\n  ];\r\n\r\n  const education: experience[] = [\r\n    {\r\n      title: \"Fourth year\",\r\n      date: \"May 2020 - Apr 2021\",\r\n      description:\r\n        \"Relevant courses: ECE 459 (Programming for Performance), CS 486 (Artificial Intelligence), SE 491 (Design Project II), ECE 454 (Distributed Computing), CS 458 (Computer Security and Privacy), ECE 358 (Networks)\",\r\n    },\r\n    {\r\n      title: \"Third year\",\r\n      date: \"Jan - Dec 2019\",\r\n      description:\r\n        \"Relevant courses: CS 343 (Concurrent and Parallel Programming), CS 348 (Databases), SE 380 (Feedback Control), SE 464 (Software Architecture), CS 341 (Algorithms), CS 349 (User Interfaces), SE 350 (Operating Systems), SE 465 (Testing)\",\r\n    },\r\n    {\r\n      title: \"Second year\",\r\n      date: \"Sept 2017 - Aug 2018\",\r\n      description:\r\n        \"Relevant courses: CS 240 (Data Structures), CS 247 (Software Engineering), MATH 239 (Combinatorics), CS 241 (Compilers), ECE 222 (Digital Computers), SE 212 (Logic)\",\r\n    },\r\n    {\r\n      title: \"First year\",\r\n      date: \"Sept 2016 - Apr 2017\",\r\n      description:\r\n        \"Relevant courses: CS 137 (Programming Principles), CS 138 (Data structures and Abstraction), MATH 135 (Proofs), ECE 105/106 (Electrical Engineering Physics), MATH 117/119 (Engineering Calculus)\",\r\n    },\r\n  ];\r\n\r\n  const services: service[] = [\r\n    {\r\n      title: \"Distributed Computing\",\r\n      description:\r\n        \"I worked in a distributed computing role at Snowflake. I have also completed coursework in distributed systems.\",\r\n      icon: require(\"../../assets/images/2301714-200.svg\").default,\r\n    },\r\n    {\r\n      title: \"ML and Data Science\",\r\n      description:\r\n        \"I have completed multiple data science internships and have pursued independent studies in machine learning.\",\r\n      icon: require(\"../../assets/images/data.svg\").default,\r\n    },\r\n    {\r\n      title: \"Backend development\",\r\n      description:\r\n        \"I'm familiar with many backend frameworks and languages and I wrote the backend for gosudoku.io\",\r\n      icon: require(\"../../assets/images/2166796.svg\").default,\r\n    },\r\n  ];\r\n\r\n  const skills: skill[] = [\r\n    {\r\n      title: \"Languages\",\r\n      description: [\r\n        \"Java\",\r\n        \"Python\",\r\n        \"C++\",\r\n        \"C\",\r\n        \"R\",\r\n        \"C#\",\r\n        \"Scala\",\r\n        \"Go\",\r\n        \"HTML/CSS\",\r\n        \"TypeScript\",\r\n      ],\r\n    },\r\n    {\r\n      title: \"Frameworks and Libraries\",\r\n      description: [\r\n        \"Java Concurrency\",\r\n        \"Apache Thrift\",\r\n        \"Hadoop\",\r\n        \"Apache Zookeeper\",\r\n        \"Tensorflow and Keras\",\r\n        \"OpenCV\",\r\n        \"Sci-kit Learn\",\r\n        \"Flask\",\r\n        \"ReactJS\",\r\n        \"Node.js\",\r\n      ],\r\n    },\r\n    {\r\n      title: \"Tools and Technologies\",\r\n      description: [\r\n        \"Git\",\r\n        \"SQL\",\r\n        \"IntelliJ\",\r\n        \"Pycharm\",\r\n        \"CLion\",\r\n        \"Visual Studio\",\r\n        \"RStudio\",\r\n        \"MongoDB\",\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* About me */}\r\n      <Grid container className=\"section pb_45 pt_37\">\r\n        <Grid item className=\"section_title mb_30\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">About me</h6>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body2\" className=\"aboutme_text\">\r\n            {resumeData.about}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Education and experience */}\r\n      <Grid container className=\"section pb_45\">\r\n        <Grid item className=\"section_title mb_30\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Professional Background</h6>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid container className=\"resume_timeline\">\r\n            <Grid item sm={12} md={6}>\r\n              <CustomTimeline value={passIn}>\r\n                {workExperience.map((experience) => (\r\n                  <TimelineItem>\r\n                    <TimelineSeparator className=\"separator_padding\">\r\n                      <TimelineDot\r\n                        variant=\"outlined\"\r\n                        className=\"timeline_dot\"\r\n                      ></TimelineDot>\r\n                      <TimelineConnector />\r\n                    </TimelineSeparator>\r\n                    <TimelineContent className=\"timeline_content\">\r\n                      <Typography className=\"timeline_title\">\r\n                        {experience.title}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" className=\"timeline_date\">\r\n                        {experience.date}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        className=\"timeline_description\"\r\n                      >\r\n                        {experience.description}\r\n                      </Typography>\r\n                    </TimelineContent>\r\n                  </TimelineItem>\r\n                ))}\r\n              </CustomTimeline>\r\n            </Grid>\r\n            <Grid item sm={12} md={6}>\r\n              <CustomTimeline value={passIn2}>\r\n                {education.map((edu) => (\r\n                  <TimelineItem>\r\n                    <TimelineSeparator className=\"separator_padding\">\r\n                      <TimelineDot\r\n                        variant=\"outlined\"\r\n                        className=\"timeline_dot\"\r\n                      ></TimelineDot>\r\n                      <TimelineConnector />\r\n                    </TimelineSeparator>\r\n                    <TimelineContent className=\"timeline_content\">\r\n                      <Typography className=\"timeline_title\">\r\n                        {edu.title}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" className=\"timeline_date\">\r\n                        {edu.date}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        className=\"timeline_description\"\r\n                      >\r\n                        {edu.description}\r\n                      </Typography>\r\n                    </TimelineContent>\r\n                  </TimelineItem>\r\n                ))}\r\n              </CustomTimeline>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Services */}\r\n      <Grid container className=\"section pb_45\">\r\n        <Grid item className=\"section_title mb_30\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Skills</h6>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={3} justify=\"space-around\">\r\n            {services.map((serv) => (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <div className=\"service\">\r\n                  <Icon>\r\n                    <img className=\"service_icon\" src={serv.icon} />\r\n                  </Icon>\r\n                  <Typography className=\"service_title\" variant=\"h6\">\r\n                    {serv.title}\r\n                  </Typography>\r\n                  <Typography className=\"service_description\" variant=\"body2\">\r\n                    {serv.description}\r\n                  </Typography>\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Skills */}\r\n      <Grid container className=\"section pb_45 graybg p_50\">\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={3} justify=\"space-between\">\r\n            {skills.map((ski) => (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Paper elevation={0} className=\"skill\">\r\n                  <Typography variant=\"h6\" className=\"skill_title\">\r\n                    {ski.title}\r\n                  </Typography>\r\n                  {ski.description.map((element) => (\r\n                    <Typography variant=\"body2\" className=\"skill_description\">\r\n                      <TimelineDot\r\n                        variant={\"outlined\"}\r\n                        className=\"timeline_dot\"\r\n                      />\r\n                      {element}\r\n                    </Typography>\r\n                  ))}\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\pages\\Portfolio\\Portfolio.tsx",["57"],"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Timeline\\Timeline.tsx",[],"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\utils\\resumeData.js",["58"],"import React from \"react\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nexport default {\r\n  name: \"Samir Rehmtulla\",\r\n  title: \"Software Engineer\",\r\n\r\n  birthday: \"March 16th 1998\",\r\n  email: \"srehmt@gmail.com\",\r\n  phone: \"226-792-3535\",\r\n\r\n  about:\r\n    \" Hi! My name is Samir, and I'm a Software Engineering student set to graduate in April 2021 from the University of Waterloo. I've grown up in Chilliwack, Western Canada, before flying east to attend Waterloo. In my spare time, I enjoy programming, piano, soccer, tennis, table tennis and I also ran cross-country for Waterloo's team. Please feel free to contact me regarding anything from sports to jobs to projects to education!\",\r\n\r\n  socials: {\r\n    facebook: {\r\n      link: \"https://www.facebook.com/samir.rehmtulla\",\r\n      text: \"Samir Rehmtulla\",\r\n      icon: <FacebookIcon />,\r\n    },\r\n    linkedIn: {\r\n      link: \"https://www.linkedin.com/in/samirrehm/\",\r\n      text: \"MyLinkedIn\",\r\n      icon: <LinkedInIcon />,\r\n    },\r\n    github: {\r\n      link: \"https://github.com/SamirRehm\",\r\n      text: \"Github\",\r\n      icon: <GitHubIcon />,\r\n    },\r\n  },\r\n};\r\n",["59","60"],"C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Button\\Button.tsx",["61"],"import { Button, SvgIcon } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\ntype ButtonProps = {\r\n  value: {\r\n    text: string;\r\n    icon: typeof SvgIcon;\r\n    target: string;\r\n  };\r\n};\r\n\r\nclass CustomButton extends Component<ButtonProps> {\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <a href={value.target} target=\"_blank\">\r\n        <Button\r\n          className=\"custom_btn\"\r\n          endIcon={\r\n            value.icon ? (\r\n              <div className=\"btn_icon_container\">\r\n                <SvgIcon component={value.icon} />\r\n              </div>\r\n            ) : null\r\n          }\r\n        >\r\n          <span className=\"btn_text\">{value.text}</span>\r\n        </Button>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomButton;\r\n","C:\\Users\\Samir\\Desktop\\Personal Site\\my-app\\src\\components\\Header\\Header.tsx",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":37,"column":13,"nodeType":"69","endLine":37,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":17,"column":11,"nodeType":"69","endLine":17,"endColumn":76},{"ruleId":"70","severity":1,"message":"71","line":275,"column":21,"nodeType":"69","endLine":275,"endColumn":69},{"ruleId":"67","severity":1,"message":"68","line":211,"column":13,"nodeType":"69","endLine":211,"endColumn":81},{"ruleId":"72","severity":1,"message":"73","line":6,"column":1,"nodeType":"74","endLine":34,"endColumn":3},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":18,"column":7,"nodeType":"69","endLine":18,"endColumn":46},{"ruleId":"67","severity":1,"message":"68","line":44,"column":7,"nodeType":"69","endLine":44,"endColumn":62},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]