{"version":3,"sources":["assets/images/resume.pdf","assets/images/Transcript.pdf","assets/images/WTR.pdf","assets/images/Rehmtulla_S.jpg","assets/images/2301714-200.svg","assets/images/data.svg","assets/images/2166796.svg","assets/images/Gosudoku.PNG","assets/images/SE101.jpg","assets/images/Maze.PNG","assets/images/NHLApp.PNG","assets/images/LZW.PNG","assets/images/Checkers.PNG","assets/images/Strava.PNG","assets/images/Graph.PNG","assets/images/Scala.png","components/Timeline/Timeline.tsx","utils/resumeData.js","components/Button/Button.tsx","components/Profile/Profile.tsx","components/Header/Header.tsx","pages/Resume/Resume.tsx","components/Footer/Footer.tsx","pages/Portfolio/Portfolio.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomTimeline","value","this","props","Timeline","className","TimelineItem","TimelineSeparator","TimelineDot","SvgIcon","component","icon","TimelineConnector","TimelineContent","Typography","title","children","Component","CustomTimelineSeparator","variant","CustomButton","href","target","Button","endIcon","text","CustomTimelineItem","link","Profile","passIn","PersonOutlineOutlinedIcon","passInButton","GetAppIcon","require","default","passInButton2","passInButton3","scores","Email","Facebook","LinkedIn","GitHub","y","Object","keys","map","key","console","log","resumeData","src","alt","Header","FacebookIcon","LinkedInIcon","GitHubIcon","pathName","location","pathname","Navbar","expand","Nav","Link","as","NavLink","to","Brand","HomeRounded","Toggle","Collapse","withRouter","Resume","WorkIcon","passIn2","SchoolIcon","services","description","Grid","container","item","xs","sm","md","date","experience","edu","spacing","justify","serv","Icon","ski","Paper","elevation","element","Footer","Portfolio","projects","image","caption","links","LinkIcon","useState","projectDialog","setProjectDialog","proj","Grow","in","timeout","Card","onClick","CardActionArea","CardMedia","CardContent","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","App","Container","lg","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b09ce1e5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/resume.e0156e4a.pdf\";","export default __webpack_public_path__ + \"static/media/Transcript.0c4b4571.pdf\";","export default __webpack_public_path__ + \"static/media/WTR.552a272e.pdf\";","export default __webpack_public_path__ + \"static/media/Rehmtulla_S.7dddc376.jpg\";","export default __webpack_public_path__ + \"static/media/2301714-200.4492eb06.svg\";","export default __webpack_public_path__ + \"static/media/data.fab454ae.svg\";","export default __webpack_public_path__ + \"static/media/2166796.7dda86d1.svg\";","export default __webpack_public_path__ + \"static/media/Gosudoku.e45b1d05.PNG\";","export default __webpack_public_path__ + \"static/media/SE101.2bec7eee.jpg\";","export default __webpack_public_path__ + \"static/media/Maze.0938dbee.PNG\";","export default __webpack_public_path__ + \"static/media/NHLApp.ecb6c43a.PNG\";","export default __webpack_public_path__ + \"static/media/LZW.5c61ca75.PNG\";","export default __webpack_public_path__ + \"static/media/Checkers.bdca3d00.PNG\";","export default __webpack_public_path__ + \"static/media/Strava.daead401.PNG\";","export default __webpack_public_path__ + \"static/media/Graph.6cf8c3ba.PNG\";","export default __webpack_public_path__ + \"static/media/Scala.83ddaf9b.png\";","import React, { Component } from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\n\r\nimport \"./Timeline.css\";\r\nimport { Typography, SvgIcon } from \"@material-ui/core\";\r\n\r\ntype TimelineProps = {\r\n  value: {\r\n    title: string;\r\n    icon: typeof SvgIcon;\r\n  };\r\n};\r\n\r\nclass CustomTimeline extends Component<TimelineProps> {\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <Timeline className={\"timeline\"}>\r\n        {/** Item header */}\r\n        <TimelineItem className={\"timeline_firstItem\"}>\r\n          <TimelineSeparator>\r\n            <TimelineDot className={\"timeline_dot_header\"}>\r\n              <SvgIcon component={value.icon} />\r\n            </TimelineDot>\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n          <TimelineContent>\r\n            <Typography className={\"timeline_header\"}>{value.title}</Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n        {this.props.children}\r\n        {/** Remaining items */}\r\n        {/**<TimelineItem>\r\n        <CustomTimelineSeparator />\r\n        <TimelineContent>Code</TimelineContent>\r\n      </TimelineItem>*/}\r\n      </Timeline>\r\n    );\r\n  }\r\n}\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n  <TimelineSeparator className={\"separator_padding\"}>\r\n    <TimelineDot variant=\"outlined\" className={\"timeline_dot\"} />\r\n    <TimelineConnector />\r\n  </TimelineSeparator>\r\n);\r\n\r\nexport default CustomTimeline;\r\n","import React from \"react\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nexport default {\r\n  name: \"Samir Rehmtulla\",\r\n  title: \"Software Engineer\",\r\n\r\n  birthday: \"March 16th 1998\",\r\n  email: \"srehmt@gmail.com\",\r\n  phone: \"226-792-3535\",\r\n\r\n  about:\r\n    \" Hi! My name is Samir, and I'm a Software Engineering student set to graduate in April 2021 from the University of Waterloo. I've grown up in Chilliwack, Western Canada, before flying east to attend Waterloo. In my spare time, I enjoy programming, piano, soccer, tennis, table tennis and I also ran cross-country for Waterloo's team. Please feel free to contact me regarding anything from sports to jobs to projects to education!\",\r\n\r\n  socials: {\r\n    facebook: {\r\n      link: \"https://www.facebook.com/samir.rehmtulla\",\r\n      text: \"Samir Rehmtulla\",\r\n      icon: <FacebookIcon />,\r\n    },\r\n    linkedIn: {\r\n      link: \"https://www.linkedin.com/in/samirrehm/\",\r\n      text: \"MyLinkedIn\",\r\n      icon: <LinkedInIcon />,\r\n    },\r\n    github: {\r\n      link: \"https://github.com/SamirRehm\",\r\n      text: \"Github\",\r\n      icon: <GitHubIcon />,\r\n    },\r\n  },\r\n};\r\n","import { Button, SvgIcon } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\ntype ButtonProps = {\r\n  value: {\r\n    text: string;\r\n    icon: typeof SvgIcon;\r\n    target: string;\r\n  };\r\n};\r\n\r\nclass CustomButton extends Component<ButtonProps> {\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <a href={value.target} target=\"_blank\">\r\n        <Button\r\n          className=\"custom_btn\"\r\n          endIcon={\r\n            value.icon ? (\r\n              <div className=\"btn_icon_container\">\r\n                <SvgIcon component={value.icon} />\r\n              </div>\r\n            ) : null\r\n          }\r\n        >\r\n          <span className=\"btn_text\">{value.text}</span>\r\n        </Button>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomButton;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CustomTimeline, { CustomTimelineSeparator } from \"../Timeline/Timeline\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\n\r\nimport resumeData from \"../../utils/resumeData\";\r\n\r\nimport \"./Profile.css\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport CustomButton from \"../Button/Button\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\ntype CustomTimelineItemProps = {\r\n  title: string;\r\n  text: string;\r\n  link?: string;\r\n};\r\n\r\ntype social = {\r\n  link: string;\r\n  text: string;\r\n};\r\n\r\nexport const CustomTimelineItem = ({\r\n  title,\r\n  text,\r\n  link,\r\n}: CustomTimelineItemProps) => {\r\n  return (\r\n    <TimelineItem>\r\n      <CustomTimelineSeparator />\r\n      <TimelineContent className=\"timeline_content\">\r\n        {link ? (\r\n          <Typography className=\"timelineItem_text\">\r\n            <span>{title}:</span>{\" \"}\r\n            <a href={link} target=\"_blank\">\r\n              {text}\r\n            </a>\r\n          </Typography>\r\n        ) : (\r\n          <Typography className=\"timelineItem_text\">\r\n            <span>{title}:</span> {text}\r\n          </Typography>\r\n        )}\r\n      </TimelineContent>\r\n    </TimelineItem>\r\n  );\r\n};\r\n\r\nconst Profile = () => {\r\n  const passIn = {\r\n    title: \"\",\r\n    icon: PersonOutlineOutlinedIcon,\r\n  };\r\n\r\n  const passInButton = {\r\n    text: \"Resume\",\r\n    icon: GetAppIcon,\r\n    target: require(\"../../assets/images/resume.pdf\").default,\r\n  };\r\n  const passInButton2 = {\r\n    text: \"Transcript\",\r\n    icon: GetAppIcon,\r\n    target: require(\"../../assets/images/Transcript.pdf\").default,\r\n  };\r\n  const passInButton3 = {\r\n    text: \"Coop Performance\",\r\n    icon: GetAppIcon,\r\n    target: require(\"../../assets/images/WTR.pdf\").default,\r\n  };\r\n\r\n  let scores: { [key: string]: social } = {\r\n    Email: {\r\n      text: \"srehmt@gmail.com\",\r\n      link: \"mailto:srehmt@gmail.com\",\r\n    },\r\n    Facebook: {\r\n      text: \"samir.rehmtulla\",\r\n      link: \"https://www.facebook.com/samir.rehmtulla\",\r\n    },\r\n    LinkedIn: {\r\n      link: \"https://www.linkedin.com/in/samirrehm/\",\r\n      text: \"samirrehm\",\r\n    },\r\n    GitHub: {\r\n      link: \"https://github.com/SamirRehm\",\r\n      text: \"SamirRehm\",\r\n    },\r\n  };\r\n  var y = Object.keys(scores).map((key) => (\r\n    <CustomTimelineItem\r\n      title={key}\r\n      text={scores[key].text}\r\n      link={scores[key].link}\r\n    ></CustomTimelineItem>\r\n  ));\r\n  console.log(y);\r\n  return (\r\n    <div className=\"profile container_shadow\">\r\n      <div className=\"profile_name\">\r\n        <Typography className=\"name\">{resumeData.name}</Typography>\r\n        <Typography className=\"title\">{resumeData.title}</Typography>\r\n      </div>\r\n\r\n      <figure className=\"profile_image\">\r\n        <img\r\n          src={require(\"../../assets/images/Rehmtulla_S.jpg\").default}\r\n          alt=\"\"\r\n        />\r\n      </figure>\r\n\r\n      <div className=\"profile_information\">\r\n        <CustomTimeline value={passIn}>\r\n          <CustomTimelineItem\r\n            title=\"Name\"\r\n            text={resumeData.name}\r\n          ></CustomTimelineItem>\r\n          <CustomTimelineItem\r\n            title=\"Title\"\r\n            text={resumeData.title}\r\n          ></CustomTimelineItem>\r\n          {y}\r\n        </CustomTimeline>\r\n        <div className=\"button_container\">\r\n          <CustomButton value={passInButton} />\r\n        </div>\r\n        <div className=\"button_container\">\r\n          <CustomButton value={passInButton2} />\r\n        </div>\r\n        <div className=\"button_container\">\r\n          <CustomButton value={passInButton3} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { SvgIcon } from \"@material-ui/core\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { NavLink, withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { HomeRounded } from \"@material-ui/icons\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nimport \"./Header.css\";\r\n\r\ninterface HeaderProps extends RouteComponentProps {}\r\n\r\ntype social = {\r\n  link: string;\r\n  text: string;\r\n  icon: typeof SvgIcon;\r\n};\r\n/** Make the header bar sticky */\r\nclass Header extends Component<HeaderProps> {\r\n  render() {\r\n    let scores: { [key: string]: social } = {\r\n      Facebook: {\r\n        text: \"samir.rehmtulla\",\r\n        link: \"https://www.facebook.com/samir.rehmtulla\",\r\n        icon: FacebookIcon,\r\n      },\r\n      LinkedIn: {\r\n        link: \"https://www.linkedin.com/in/samirrehm/\",\r\n        text: \"samirrehm\",\r\n        icon: LinkedInIcon,\r\n      },\r\n      GitHub: {\r\n        link: \"https://github.com/SamirRehm\",\r\n        text: \"SamirRehm\",\r\n        icon: GitHubIcon,\r\n      },\r\n    };\r\n\r\n    var y = Object.keys(scores).map((key) => (\r\n      <a title={key} href={scores[key].link} target=\"_blank\">\r\n        <SvgIcon component={scores[key].icon} />{\" \"}\r\n      </a>\r\n    ));\r\n\r\n    const pathName = this.props?.location?.pathname;\r\n    return (\r\n      <Navbar expand=\"lg\" className=\"header\">\r\n        <Nav.Link as={NavLink} to=\"/\" className=\"header_navlink\">\r\n          <Navbar.Brand className=\"header_home\">\r\n            <HomeRounded />\r\n          </Navbar.Brand>\r\n        </Nav.Link>\r\n\r\n        <Navbar.Toggle />\r\n\r\n        <Navbar.Collapse>\r\n          <Nav className=\"header_left\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              to=\"/\"\r\n              className={\r\n                pathName === \"/\" ? \"header_link_active\" : \"header_link\"\r\n              }\r\n            >\r\n              RESUME\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={NavLink}\r\n              to=\"/portfolio\"\r\n              className={\r\n                pathName === \"/portfolio\" ? \"header_link_active\" : \"header_link\"\r\n              }\r\n            >\r\n              PROJECTS\r\n            </Nav.Link>\r\n          </Nav>\r\n          <div className=\"header_right\">{y}</div>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Header);\r\n","import { Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CustomTimeline from \"../../components/Timeline/Timeline\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport \"./Resume.css\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\n\r\ntype experience = {\r\n  title: string;\r\n  date: string;\r\n  description: string;\r\n};\r\n\r\ntype service = {\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n};\r\n\r\ntype skill = {\r\n  title: string;\r\n  description: string[];\r\n};\r\n\r\nconst Resume = () => {\r\n  const passIn = {\r\n    title: \"Work Experience\",\r\n    icon: WorkIcon,\r\n  };\r\n\r\n  const passIn2 = {\r\n    title:\r\n      \"Education - UWaterloo, Bachelor of Software Engineering - GPA: 94.39\",\r\n    icon: SchoolIcon,\r\n  };\r\n\r\n  const workExperience: experience[] = [\r\n    {\r\n      title: \"Snowflake Computing\",\r\n      date: \"Sept - Dec 2020 | Software Engineering Intern\",\r\n      description:\r\n        \"Drafted, designed, implemented, tested and monitored a throttling layer that balances user workload isolation with cost-efficient multitenant resource scheduling.\",\r\n    },\r\n    {\r\n      title: \"Safe Software\",\r\n      date: \"Jan - Apr 2020 | C++ Development Intern\",\r\n      description:\r\n        \"Implemented performant readers and writers to add read and write support to the Feature Manipulation Engine (FME) for Microsoft DirectDraw Surface (DDS) and Mapbox Vector Tile (MVT) file formats.\",\r\n    },\r\n    {\r\n      title: \"Wish\",\r\n      date: \"May - Aug 2019 | Software Engineering Analytics Intern\",\r\n      description:\r\n        \"Designed and implemented a 3-step (TF-IDF, Gradient Boosting, Logistic Regression) machine learning pipeline to classify misleading products on the platform. Also migrated the company's main analytics dashboard from Looker to Tableau.\",\r\n    },\r\n    {\r\n      title: \"Kik\",\r\n      date: \"Sept - Dec 2018 | Data Science Intern\",\r\n      description:\r\n        \"Built a Spark gradient-boosted tree model to flag spam users in real-time, seconds after account creation. Designed a hyperparameter tuning framework for existing models and set up SQL-driven dashboards.\",\r\n    },\r\n    {\r\n      title: \"RocScience\",\r\n      date: \"Jan - Apr 2018 | C# Development Intern\",\r\n      description:\r\n        \"Implemented automatic surface parameterization of arbitrary 3D tunnel mesh geometries to allow clients to apply boundary conditions at discrete intervals on tunnel models.\",\r\n    },\r\n    {\r\n      title: \"Loblaw Digital\",\r\n      date: \"May - Aug 2017 | Software Engineering (Backend) Intern\",\r\n      description:\r\n        'Implemented backend endpoints for new \"Store Locator\" page with automated tests, mocking necessary web services',\r\n    },\r\n  ];\r\n\r\n  const education: experience[] = [\r\n    {\r\n      title: \"Fourth year\",\r\n      date: \"May 2020 - Apr 2021\",\r\n      description:\r\n        \"Relevant courses: ECE 459 (Programming for Performance), CS 486 (Artificial Intelligence), SE 491 (Design Project II), ECE 454 (Distributed Computing), CS 458 (Computer Security and Privacy), ECE 358 (Networks)\",\r\n    },\r\n    {\r\n      title: \"Third year\",\r\n      date: \"Jan - Dec 2019\",\r\n      description:\r\n        \"Relevant courses: CS 343 (Concurrent and Parallel Programming), CS 348 (Databases), SE 380 (Feedback Control), SE 464 (Software Architecture), CS 341 (Algorithms), CS 349 (User Interfaces), SE 350 (Operating Systems), SE 465 (Testing)\",\r\n    },\r\n    {\r\n      title: \"Second year\",\r\n      date: \"Sept 2017 - Aug 2018\",\r\n      description:\r\n        \"Relevant courses: CS 240 (Data Structures), CS 247 (Software Engineering), MATH 239 (Combinatorics), CS 241 (Compilers), ECE 222 (Digital Computers), SE 212 (Logic)\",\r\n    },\r\n    {\r\n      title: \"First year\",\r\n      date: \"Sept 2016 - Apr 2017\",\r\n      description:\r\n        \"Relevant courses: CS 137 (Programming Principles), CS 138 (Data structures and Abstraction), MATH 135 (Proofs), ECE 105/106 (Electrical Engineering Physics), MATH 117/119 (Engineering Calculus)\",\r\n    },\r\n  ];\r\n\r\n  const services: service[] = [\r\n    {\r\n      title: \"Distributed Computing\",\r\n      description:\r\n        \"I worked in a distributed computing role at Snowflake. I have also completed coursework in distributed systems.\",\r\n      icon: require(\"../../assets/images/2301714-200.svg\").default,\r\n    },\r\n    {\r\n      title: \"ML and Data Science\",\r\n      description:\r\n        \"I have completed multiple data science internships and have pursued independent studies in machine learning.\",\r\n      icon: require(\"../../assets/images/data.svg\").default,\r\n    },\r\n    {\r\n      title: \"Backend development\",\r\n      description:\r\n        \"I'm familiar with many backend frameworks and languages and I wrote the backend for gosudoku.io\",\r\n      icon: require(\"../../assets/images/2166796.svg\").default,\r\n    },\r\n  ];\r\n\r\n  const skills: skill[] = [\r\n    {\r\n      title: \"Languages\",\r\n      description: [\r\n        \"Java\",\r\n        \"Python\",\r\n        \"C++\",\r\n        \"C\",\r\n        \"R\",\r\n        \"C#\",\r\n        \"Scala\",\r\n        \"Go\",\r\n        \"HTML/CSS\",\r\n        \"TypeScript\",\r\n      ],\r\n    },\r\n    {\r\n      title: \"Frameworks and Libraries\",\r\n      description: [\r\n        \"Java Concurrency\",\r\n        \"Apache Thrift\",\r\n        \"Hadoop\",\r\n        \"Apache Zookeeper\",\r\n        \"Tensorflow and Keras\",\r\n        \"OpenCV\",\r\n        \"Sci-kit Learn\",\r\n        \"Flask\",\r\n        \"ReactJS\",\r\n        \"Node.js\",\r\n      ],\r\n    },\r\n    {\r\n      title: \"Tools and Technologies\",\r\n      description: [\r\n        \"Git\",\r\n        \"SQL\",\r\n        \"IntelliJ\",\r\n        \"Pycharm\",\r\n        \"CLion\",\r\n        \"Visual Studio\",\r\n        \"RStudio\",\r\n        \"MongoDB\",\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* About me */}\r\n      <Grid container className=\"section pb_45 pt_37\">\r\n        <Grid item className=\"section_title mb_30\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">About me</h6>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body2\" className=\"aboutme_text\">\r\n            {resumeData.about}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Education and experience */}\r\n      <Grid container className=\"section pb_45\">\r\n        <Grid item className=\"section_title mb_30\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Professional Background</h6>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid container className=\"resume_timeline\">\r\n            <Grid item sm={12} md={6}>\r\n              <CustomTimeline value={passIn}>\r\n                {workExperience.map((experience) => (\r\n                  <TimelineItem>\r\n                    <TimelineSeparator className=\"separator_padding\">\r\n                      <TimelineDot\r\n                        variant=\"outlined\"\r\n                        className=\"timeline_dot\"\r\n                      ></TimelineDot>\r\n                      <TimelineConnector />\r\n                    </TimelineSeparator>\r\n                    <TimelineContent className=\"timeline_content\">\r\n                      <Typography className=\"timeline_title\">\r\n                        {experience.title}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" className=\"timeline_date\">\r\n                        {experience.date}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        className=\"timeline_description\"\r\n                      >\r\n                        {experience.description}\r\n                      </Typography>\r\n                    </TimelineContent>\r\n                  </TimelineItem>\r\n                ))}\r\n              </CustomTimeline>\r\n            </Grid>\r\n            <Grid item sm={12} md={6}>\r\n              <CustomTimeline value={passIn2}>\r\n                {education.map((edu) => (\r\n                  <TimelineItem>\r\n                    <TimelineSeparator className=\"separator_padding\">\r\n                      <TimelineDot\r\n                        variant=\"outlined\"\r\n                        className=\"timeline_dot\"\r\n                      ></TimelineDot>\r\n                      <TimelineConnector />\r\n                    </TimelineSeparator>\r\n                    <TimelineContent className=\"timeline_content\">\r\n                      <Typography className=\"timeline_title\">\r\n                        {edu.title}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" className=\"timeline_date\">\r\n                        {edu.date}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        className=\"timeline_description\"\r\n                      >\r\n                        {edu.description}\r\n                      </Typography>\r\n                    </TimelineContent>\r\n                  </TimelineItem>\r\n                ))}\r\n              </CustomTimeline>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Services */}\r\n      <Grid container className=\"section pb_45\">\r\n        <Grid item className=\"section_title mb_30\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Skills</h6>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={3} justify=\"space-around\">\r\n            {services.map((serv) => (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <div className=\"service\">\r\n                  <Icon>\r\n                    <img className=\"service_icon\" src={serv.icon} />\r\n                  </Icon>\r\n                  <Typography className=\"service_title\" variant=\"h6\">\r\n                    {serv.title}\r\n                  </Typography>\r\n                  <Typography className=\"service_description\" variant=\"body2\">\r\n                    {serv.description}\r\n                  </Typography>\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Skills */}\r\n      <Grid container className=\"section pb_45 graybg p_50\">\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={3} justify=\"space-between\">\r\n            {skills.map((ski) => (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Paper elevation={0} className=\"skill\">\r\n                  <Typography variant=\"h6\" className=\"skill_title\">\r\n                    {ski.title}\r\n                  </Typography>\r\n                  {ski.description.map((element) => (\r\n                    <Typography variant=\"body2\" className=\"skill_description\">\r\n                      <TimelineDot\r\n                        variant={\"outlined\"}\r\n                        className=\"timeline_dot\"\r\n                      />\r\n                      {element}\r\n                    </Typography>\r\n                  ))}\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Footer.css\";\r\nimport resumeData from \"../../utils/resumeData\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <Typography className=\"footer_name\">{resumeData.name}</Typography>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Typography className=\"footer_copyright\">\r\n          Designed and Developed by Samir Rehmtulla\r\n          <br />\r\n          Clone idea from{\" \"}\r\n          <a href=\"https://themeforest.net/user/tavonline\" target=\"_blank\">\r\n            Travonline\r\n          </a>\r\n          .\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Grow,\r\n  SvgIcon,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Portfolio.css\";\r\n\r\ntype projectLink = {\r\n  link: string;\r\n  icon: typeof SvgIcon;\r\n};\r\n\r\ntype project = {\r\n  title: string;\r\n  image: string;\r\n  caption: string;\r\n  description: string;\r\n  links: projectLink[];\r\n};\r\n\r\nconst Portfolio = () => {\r\n  const projects = [\r\n    {\r\n      image: require(\"../../assets/images/Gosudoku.PNG\").default,\r\n      title: \"GoSudoku\",\r\n      caption: \"The ultimate online, multiplayer Sudoku experience\",\r\n      description:\r\n        \"GoSudoku is a fully-fledged web application for online multiplayer collaborative Sudoku. The application is written using React, Material UI, Redux and Typescript on the front-end, and Python Flask on the backend with a MongoDB database. WebSocket technology is used for the real-time communication in multiplayer games. The application supports single and multiplayer modes, a full authentication system and a friends system.\",\r\n      links: [{ link: \"https://gosudoku.io\", icon: LinkIcon }],\r\n    },\r\n    {\r\n      image: require(\"../../assets/images/SE101.jpg\").default,\r\n      caption: \"A tilt-based maze game programmed on a Ti Microcontroller\",\r\n      title: \"Tilt Maze\",\r\n      description:\r\n        \"This was my first term software engineering project at Waterloo. We were to implement a project that interfaced with a Ti C microcontroller with an Orbit Booster Pack. I leveraged the accelerometer in the Orbit to implement a tilt-based maze game, where a user guides a ball through a base. The maze is generated using the recursive division algorithm.\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/SamirRehm/SE101MazeGame\",\r\n          icon: GitHubIcon,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      image: require(\"../../assets/images/Maze.PNG\").default,\r\n      caption: \"A maze generation and pathfinding visualizer\",\r\n      title: \"Maze Generation and Pathfinding\",\r\n      description:\r\n        \"This project was a maze generation and pathfinding visualizer. The project is implemented in Java, using the Swing library for UI. It currently supports recursive division maze generation and both breadth-first and depth-first searches for pathfinding. The algorithms are animated.\",\r\n      links: [\r\n        {\r\n          link:\r\n            \"https://github.com/SamirRehm/Pathfinding-and-Maze-Generation-Visualizer\",\r\n          icon: GitHubIcon,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      image: require(\"../../assets/images/NHLApp.PNG\").default,\r\n      caption:\r\n        \"A web application that predicts shot quality in real-time for NHL games\",\r\n      title: \"NHL Shot Quality\",\r\n      description:\r\n        \"This project was an NHL real-time game visualizer, that also included a machine learning model to predict shot quality. The visualizer would display on ice events on a rink as they happened, and list them in a table. I implemented two shot predictor models that performed similarly; one with logistic regression and one with XGBoost. The shot quality model did a good job of identifying high scoring chances, giving a mean goal probability of 15.2% to shots that were goals and a probability of around 7% to shots that were saved. Features included shot type, distance from the goal and angle with the goal. This entire project was implemented in R, using the Shiny framework to turn it into a web appliation\",\r\n      links: [\r\n        { link: \"https://github.com/SamirRehm/NHLData\", icon: GitHubIcon },\r\n        { link: \"https://samirrehm.shinyapps.io/NHLData/\", icon: LinkIcon },\r\n      ],\r\n    },\r\n    {\r\n      image: require(\"../../assets/images/LZW.PNG\").default,\r\n      caption:\r\n        \"A text compressor and decompressor that implements the LZW algorithm\",\r\n      title: \"LZW Text Compressor\",\r\n      description:\r\n        \"This project was implemented in Java. I implemented the LZW algorithm for compression. This algorithm was tested by round-trip encoding and decoding a plain text version of Harry Potter. The compressed file was 39% smaller than the original\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/SamirRehm/LZWTextCompressor\",\r\n          icon: GitHubIcon,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      image: require(\"../../assets/images/Checkers.PNG\").default,\r\n      caption: \"A two player checkers game\",\r\n      title: \"Checkers\",\r\n      description:\r\n        \"Checkers. Implemented in python using the pygame module. Can't be simpler than that\",\r\n      links: [\r\n        { link: \"https://github.com/SamirRehm/Checkers\", icon: GitHubIcon },\r\n      ],\r\n    },\r\n    {\r\n      image: require(\"../../assets/images/Strava.PNG\").default,\r\n      caption:\r\n        \"A dashboard that displays personal running statistics. Leverages Strava API.\",\r\n      title: \"Training Dashboard\",\r\n      description:\r\n        \"This web application was written entirely in R using plotly and the Shiny framework. It uses the Strava API to get running and exercise data for a user and yields informative charts in a dashboard. The activity stats section allows for more in depth statistics about a specific run/activity including pace, distance, interval paces, and GPS raw data. The app no longer works due to some Strava API changes, may refactor it and republish it online.\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/SamirRehm/Training-Dashboard\",\r\n          icon: GitHubIcon,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      image: require(\"../../assets/images/Graph.PNG\").default,\r\n      caption: \"Visualizer for various graph theory problems\",\r\n      title: \"Graph Theory Visualizer\",\r\n      description:\r\n        \"A graph theory visualizer written in JavaScript. The visualizer allows a user to create a weighted undirected graph, and then visualize algorithms on it. The platform supports finding bipartitions if they exist, finding minimum colourings, finding the shortest path between two nodes (Djikstra's algorithm), finding Eulerian and Hamiltonian circuits and finding minimum spanning trees. The screenshot shows finding a 5-colouring for the given graph.\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/changangela/graph-theory\",\r\n          icon: GitHubIcon,\r\n        },\r\n        { link: \"https://changangela.github.io/graph-theory/\", icon: LinkIcon },\r\n      ],\r\n    },\r\n    {\r\n      image: require(\"../../assets/images/Scala.png\").default,\r\n      caption:\r\n        \"A compiler that parses a subset of Scala into MIPS machine language\",\r\n      title: \"Scala to MIPS compiler\",\r\n      description:\r\n        \"A compiler that compiles a subset of Scala into MIPS. Implemented variables, type safety, conditions, loops, functions, garbage collection (using Cheney's algorithm for GC) and tail call recursion optimization.\",\r\n      links: [],\r\n    },\r\n  ];\r\n\r\n  const [projectDialog, setProjectDialog] = useState<project | null>(null);\r\n\r\n  return (\r\n    <Grid container className=\"section pb_45 pt_37\">\r\n      <Grid item className=\"section_title mb_30\">\r\n        <span></span>\r\n        <h6 className=\"section_title_text\">Projects</h6>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          {projects.map((proj) => (\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Grow in timeout={600}>\r\n                <Card\r\n                  className=\"custom_card\"\r\n                  onClick={() => setProjectDialog(proj)}\r\n                >\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"custom_card_image\"\r\n                      image={proj.image}\r\n                      title={proj.title}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography\r\n                        variant={\"body2\"}\r\n                        className=\"custom_card_title\"\r\n                      >\r\n                        {proj.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"caption\"\r\n                        className=\"custom_card_caption\"\r\n                      >\r\n                        {proj.caption}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grow>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={projectDialog !== null}\r\n        onClose={() => setProjectDialog(null)}\r\n        className=\"project_dialog\"\r\n        fullWidth={true}\r\n        maxWidth=\"md\"\r\n      >\r\n        <DialogTitle className=\"project_dialog_title\">\r\n          {projectDialog?.title}\r\n        </DialogTitle>\r\n        <img\r\n          src={projectDialog?.image}\r\n          alt=\"\"\r\n          className=\"project_dialog_image\"\r\n        />\r\n        <DialogContent>\r\n          <Typography className=\"project_dialog_description\">\r\n            {projectDialog?.description}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions className=\"project_dialog_actions\">\r\n          {projectDialog?.links?.map((link) => (\r\n            <a href={link.link} target=\"_blank\" className=\"project_dialog_icon\">\r\n              <SvgIcon component={link.icon} />\r\n            </a>\r\n          ))}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport Profile from \"./components/Profile/Profile\";\nimport Header from \"./components/Header/Header\";\nimport Resume from \"./pages/Resume/Resume\";\nimport Footer from \"./components/Footer/Footer\";\nimport Portfolio from \"./pages/Portfolio/Portfolio\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Container className={\"top_60\"}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={12} md={4} lg={3}>\n          <Profile />\n        </Grid>\n\n        <Grid item xs>\n          <Router>\n            <Header />\n            <div className=\"main-content container_shadow\">\n              <Switch>\n                <Route path=\"/portfolio\">\n                  <Portfolio />\n                </Route>\n                <Route path=\"/\">\n                  <Resume />\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}